openapi: 3.0.0
info:
  title: My API
  version: 1.0.0

paths:
  /api/v1/login:
    post:
      operationId: "LoginUser"
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'

  /api/v1/users:
    get:
      operationId: "ListUsers"
      summary: List users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/v1/user/create:
    post:
      operationId: "CreateUser"
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'

  /api/v1/users/{id}:
    get:
      operationId: "GetUser"
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/v1/book/create:
    post:
      operationId: "CreateBook"
      summary: Create book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'

components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
    BadRequestResponse:
      type: object
      properties:
        message:
          type: string
    UnauthorizedResponse:
      type: object
      properties:
        message:
          type: string
    NotFoundResponse:
      type: object
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    LoginUserRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    LoginUserResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    CreateUserRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        aboutMe:
          type: string
      required:
        - login
        - password
        - aboutMe
    CreateBookRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      required:
        - title
        - description